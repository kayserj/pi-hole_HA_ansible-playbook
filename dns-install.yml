---
- hosts: dns_grp
  any_errors_fatal: false
  gather_facts: true
  vars:
    pass_hash: ''
    vrrp_auth: 'dayman-fighter-of-the-nightman'
    pihole_intf: 'eth0'
    dns1_ip: '10.0.127.181/24'
    dns1_name: 'dns1'
    dns2_ip: '10.0.127.182/24'
    dns2_name: 'dns2'
    dns_vip: '10.0.127.183/24'
    dns_vip_name: 'dns'
    pub_dns1_ip: '8.8.8.8'
    pub_dns2_ip: '1.1.1.1'

  tasks:
  - name: Installing application packages
    apt: name={{ item }} state=latest
    loop:
      - ntp
      - git
      - python3-minimal
      - apt-transport-https
      - software-properties-common
      - keepalived
      - libipset11
    become: true

  - name: Making /etc/pihole directory
    file: 
      path: /etc/pihole
      state: directory
      mode: '0755'
    become: true

  - name: Copy setupVars to /etc/pihole/
    template: src=templates/{{ ansible_hostname }}-setupVars.j2 dest=/etc/pihole/setupVars.conf
    become: true

  - name: Copy Keepalived.conf to /etc/keepalived
    template: src=templates/{{ ansible_hostname }}-keepalived.j2 dest=/etc/keepalived/keepalived.conf
    become: true

  - name: Making /etc/scripts directory
    file: 
      path: /etc/scripts
      state: directory
      mode: '0755'
    become: true

  - name: Copy FTL Service Monitor Script
    template: src=templates/chk_ftl dest=/etc/scripts/chk_ftl mode='0755'
    become: true

  - name: Copy hosts file
    template: src=templates/dns-hosts-file dest=/etc/hosts mode='0755'
    become: true

  - name: Checking if pi-hole is installed
    stat:
      path: /usr/local/bin/pihole
    register: pihole_binary
    become: true

  - name: Still checking if pi-hole is installed
    set_fact:
      pihole_installed: "{{ pihole_binary.stat.exists | default(false) }}"

  - name: Downloading pi-hole software
    get_url:
      url: https://raw.githubusercontent.com/pi-hole/pi-hole/master/automated%20install/basic-install.sh
      dest: ~/pihole-install.sh
      mode: u+rwx
    when: not pihole_installed
    become: true

  - name: Installing pi-hole software
    shell: ~/pihole-install.sh PIHOLE_SKIP_OS_CHECK=true --unattended
    when: not pihole_installed
    become: true

  - name: Editing dhcpcd.conf file to change DNS entry
    lineinfile:
      path: /etc/dhcpcd.conf
      regexp: '^static domain_name_servers=8.8.8.8'
      line: 'static domain_name_servers=127.0.0.1'
      state: present
    become: true

  - name: Reboot host and wait for it to restart
    reboot:
      msg: Rebooting device initiated by ansible
      connect_timeout: 5
      reboot_timeout: 600
      pre_reboot_delay: 0
      post_reboot_delay: 30
      test_command: whoami
    become: true
    when: not pihole_installed
